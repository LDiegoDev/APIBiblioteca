// <auto-generated />
using System;
using Biblioteca.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


namespace Biblioteca.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevIO.Business.Models.Endereco", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<string>("Bairro")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<string>("Cep")
                    .IsRequired()
                    .HasColumnType("varchar(8)");

                b.Property<string>("Cidade")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<string>("Complemento")
                    .HasColumnType("varchar(250)");

                b.Property<string>("Estado")
                    .IsRequired()
                    .HasColumnType("varchar(50)");

                b.Property<Guid>("EditoraId");

                b.Property<string>("Logradouro")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.Property<string>("Numero")
                    .IsRequired()
                    .HasColumnType("varchar(50)");

                b.HasKey("Id");

                b.HasIndex("EditoraId")
                    .IsUnique();

                b.ToTable("Enderecos");
            });

            modelBuilder.Entity("DevIO.Business.Models.Editora", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<bool>("Ativo");

                b.Property<string>("Documento")
                    .IsRequired()
                    .HasColumnType("varchar(14)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.Property<int>("TipoEditora");

                b.HasKey("Id");

                b.ToTable("Editoras");
            });

            modelBuilder.Entity("DevIO.Business.Models.Autor", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.HasIndex("EditoraId");

                b.ToTable("Autores");
            });

            modelBuilder.Entity("DevIO.Business.Models.Livro", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<Guid>("EditoraId");

                b.Property<string>("Titulo")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasColumnType("varchar(1000)");

                b.Property<string>("Genero")
                .IsRequired()
                .HasColumnType("varchar(50)");

                b.Property<int>("Paginas");

                b.Property<string>("Imagem")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<decimal>("Preco");

                b.Property<DateTime>("DataPublicacao");

                b.Property<DateTime>("DataCadastro");

                b.Property<bool>("Ativo");

                b.HasKey("Id");

                b.HasIndex("EditoraId");

                b.ToTable("Livros");
            });

            modelBuilder.Entity("DevIO.Business.Models.Endereco", b =>
            {
                b.HasOne("DevIO.Business.Models.Editora", "Editora")
                    .WithOne("Endereco")
                    .HasForeignKey("DevIO.Business.Models.Endereco", "EditoraId");
            });

            modelBuilder.Entity("DevIO.Business.Models.Livro", b =>
            {
                b.HasOne("DevIO.Business.Models.Editora", "Editora")
                    .WithMany("Livros")
                    .HasForeignKey("EditoraId");
            });

            modelBuilder.Entity("DevIO.Business.Models.Autor", b =>
            {
                b.HasOne("DevIO.Business.Models.Editora", "Editora")
                    .WithMany("Autores")
                    .HasForeignKey("DevIO.Business.Models.Autor", "EditoraId");

                b.HasMany("DevIO.Business.Models.Livro", "Livro")
                    .WithMany("Autores");

            });
#pragma warning restore 612, 618
        }
    }
}
